/* automatically generated by JSCoverage - do not edit */
if (typeof _$jscoverage === 'undefined') _$jscoverage = {};
if (! _$jscoverage['registry.js']) {
  _$jscoverage['registry.js'] = [];
  _$jscoverage['registry.js'][1] = 0;
  _$jscoverage['registry.js'][5] = 0;
  _$jscoverage['registry.js'][6] = 0;
  _$jscoverage['registry.js'][7] = 0;
  _$jscoverage['registry.js'][12] = 0;
  _$jscoverage['registry.js'][13] = 0;
  _$jscoverage['registry.js'][15] = 0;
  _$jscoverage['registry.js'][19] = 0;
  _$jscoverage['registry.js'][20] = 0;
  _$jscoverage['registry.js'][21] = 0;
  _$jscoverage['registry.js'][24] = 0;
  _$jscoverage['registry.js'][27] = 0;
}
_$jscoverage['registry.js'][1]++;
exports = module.exports = {instance: {values: [], getIndex: (function (name) {
  _$jscoverage['registry.js'][5]++;
  for (var i = 0; i < this.values.length; i++) {
    _$jscoverage['registry.js'][6]++;
    if (this.values[i].name === name) {
      _$jscoverage['registry.js'][7]++;
      return i;
    }
}
}), set: (function (name, value) {
  _$jscoverage['registry.js'][12]++;
  if (this.get(name) === false) {
    _$jscoverage['registry.js'][13]++;
    this.values.push({name: name, value: value});
  }
  else {
    _$jscoverage['registry.js'][15]++;
    this.values[this.getIndex(name)].value = value;
  }
}), get: (function (name) {
  _$jscoverage['registry.js'][19]++;
  for (var i = 0; i < this.values.length; i++) {
    _$jscoverage['registry.js'][20]++;
    if (this.values[i].name === name) {
      _$jscoverage['registry.js'][21]++;
      return this.values[i].value;
    }
}
  _$jscoverage['registry.js'][24]++;
  return false;
}), reset: (function () {
  _$jscoverage['registry.js'][27]++;
  this.values = [];
})}};
_$jscoverage['registry.js'].source = ["exports = module.exports = {","  instance: {","    values: [],","    getIndex: function(name) {","      for (var i = 0; i &lt; this.values.length; i++) {","        if (this.values[i].name === name) {","          return i;","        }","      }","    },","    set : function(name, value) {","      if (this.get(name) === false) {","        this.values.push({ name: name, value: value });","      } else {","        this.values[this.getIndex(name)].value = value;","      }","    },","    get: function(name) {","      for (var i = 0; i &lt; this.values.length; i++) {","        if (this.values[i].name === name) {","          return this.values[i].value;","        }","      }","      return false;","    },","    reset: function() {","      this.values = [];","    }","  }","};"];
